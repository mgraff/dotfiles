#  _
# | |_ _ __ ___  _   ___  __
# | __| '_ ` _ \| | | \ \/ /
# | |_| | | | | | |_| |>  <
#  \__|_| |_| |_|\__,_/_/\_\
#

# split panes using | and -
bind | split-window -h
bind - split-window -v
unbind '"'
unbind %

# remap prefix from 'C-b' to 'C-a'
unbind C-b
set-option -g prefix C-a
bind-key C-a send-prefix

# reload config file (change file location to your the tmux.conf you want to use)
bind r source-file ~/.tmux.conf \; display-message "Config reloaded..."

# Toggle on/off all keybindings
bind -T root F12  \
  set prefix None \;\
  set key-table off \;\
  if -F '#{pane_in_mode}' 'send-keys -X cancel' \;\
  refresh-client -S \;\

bind -T off F12 \
  set -u prefix \;\
  set -u key-table \;\
  set -u status-style \;\
  set -u window-status-current-style \;\
  set -u window-status-current-format \;\
  refresh-client -S \;

# PANES
## switch panes using Alt-arrow without prefix
bind -n M-Left  select-pane -L
bind -n M-Right select-pane -R
bind -n M-Up    select-pane -U
bind -n M-Down  select-pane -D
## Zoom pane
bind + resize-pane -Z

# WINDOWS
## Create window using Shift-Alt-T (or ™ for OS X) and ask to rename it after creation
bind-key -n ™   new-window
bind-key -n M-T new-window
set-hook -g after-new-window 'command-prompt -I "#{window_name}" "rename-window '%%'"'
## switch windows using Shift-Alt-arrow without prefix
bind -n M-S-Left  previous-window
bind -n M-S-Right next-window
bind -n M-S-Up    last-window
bind -n M-S-Down  last-window
## Moving windows
bind -n M-S-Pageup   swap-window -t :+
bind -n M-S-Pagedown swap-window -t :-

# Enable mouse mode
set -g mouse on

# don't rename windows automatically
set-option -g allow-rename off

# increase history size
set -g history-limit 100000

# Allow the arrow key to be used immediately after changing windows
set-option -g repeat-time 0

# Start numbering at 1
set -g base-index 1

# window 0, 1, 2, remove 1, renumber to 0, 1
set-option -g renumber-windows on

# Rather than constraining window size to the maximum size of any client
# connected to the *session*, constrain window size to the maximum size of any
# client connected to *that window*. Much more reasonable.
setw -g aggressive-resize on

# Set window notifications
set-window-option -g monitor-activity on
set-option -g visual-activity off
set-window-option -g visual-bell on
set-window-option -g bell-action other

# Theme
## Color definition
color_main="brightred"
color_dark="black"
color_light="white"
color_secondary="brightmagenta"
color_session_text="blue"
color_status_text="colour245"
color_window_off_indicator="red"
color_window_off_status_bg="white"
color_window_off_status_current_bg="brightwhite"

## Styles
set -g mode-style "fg=default,bg=$color_main"
set -g message-style "fg=$color_main,bg=$color_dark"
set -g status-style "fg=$color_status_text,bg=$color_dark"
setw -g window-status-style "fg=$color_status_text,bg=$color_dark"
setw -g window-status-current-style "fg=$color_light,bold,bg=$color_main"
setw -g window-status-activity-style "fg=$color_main"
setw -g pane-active-border-style "fg=$color_main"

## Separators
set -g window-status-separator ""
separator_powerline_left=""
separator_powerline_right=""

## Variables
wg_is_keys_off="#[fg=$color_light,bg=$color_window_off_indicator]#([ $(tmux show-option -qv key-table) = 'off' ] && echo 'OFF')#[default]"

## Status
set -g status on
set -g status-interval 5
set -g status-position bottom
set -g status-justify left
set -g status-right-length 100
set -g status-left " #S "
set -g status-right "$wg_is_keys_off #H"
setw -g window-status-format "  #I›#W  "
setw -g window-status-current-format "#[fg=$color_dark,nobright,bg=$color_main]$separator_powerline_right#[default] #I›#W #[fg=$color_main,bg=$color_dark]$separator_powerline_right#[default]"

# PLUGINS
## List of plugins
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-resurrect'
set -g @plugin 'tmux-plugins/tmux-continuum'

## Plugins options
set -g @continuum-restore 'on'

## Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
run -b '~/.tmux/plugins/tpm/tpm'
